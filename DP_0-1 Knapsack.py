# -*- coding: utf-8 -*-
"""DP_0-1 Knapsack

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qop9eNNMM2NkhrdUl00c1kBTjl40VrPx
"""

import numpy as np

def full_sack(refer, sack_w):
  table = np.zeros((6, 11))

  for x in range(1, len(refer)+1):
    for y in range(1, sack_w+1):
      if refer[x-1][1] <= y:
        old_value = table[x-1][y]
        current_value = refer[x-1][2]
        new_value = table[x-1][y-refer[x-1][1]] + refer[x-1][2]
        table[x][y] = max(current_value, old_value, new_value)
        
      else:
        table[x][y] = table[x-1][y]

  return table

reference_table = np.array([[1, 5, 10], [2, 4, 40], [3, 6, 30], [4, 3, 50]])
sack_weight = 10
z = full_sack(reference_table, sack_weight)
print(z)
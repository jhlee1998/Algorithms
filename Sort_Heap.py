# -*- coding: utf-8 -*-
"""Sort_Heap

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T-Oa9236tcFRqGxuGrypAkN6-BHQnNJa
"""

import numpy as np

def heap(input):
  table1 = [100]

  for a in range(len(input)):
    table1.append(input[a])
    b = a

    while table1[b] > table1[b//2]:
      table1[b], table1[b//2] = table1[b//2], table1[b]
      b = b//2

  table1.pop(0)

  return table1

def sort(input):
  table2 = heap(input)
  table3 = []
  m = len(table2)

  for c in range(m-1):
    #while table2 is not None:
    table3.append(table2.pop(0))
    #print(table2)
    table2.insert(0, table2[-1])
    table2.pop(-1)
    #print(table2)
    d = 0
    #print(table3)

    while 2*d+2 < len(table2):
    #while d < 1:
      #print(d)
      if table2[2*d+1] > table2[2*d+2]:
        if table2[d] < table2[2*d+1]:
          table2[d], table2[2*d+1] = table2[2*d+1], table2[d]
          #print(table2)
        d = d+1
      else:
        if table2[d] < table2[2*d+2]:
          table2[d], table2[2*d+2] = table2[2*d+2], table2[d]
          #print(table2)
        d = d+1

  return table3

data = list((4, 5, 3, 6, 7, 2, 1))
#data = list((87, 39, 2, 5, 67, 91, 1))
z = sort(data)
print(z)
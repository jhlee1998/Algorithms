# -*- coding: utf-8 -*-
"""Algo_Kruskal

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uPh1KDRcuqTwb4UhfPXrIiNVlF4boSdE
"""

import numpy as np

def bubble_array(a):
  for x in range(len(a)-1):
    for y in range(len(a)-x-1):
      if a[y, 2] > a[y+1, 2]:
        a[[y,y+1]]=a[[y+1,y]]

      y = 0

  return a

def kruskal(a):
  x = np.zeros(shape=(len(a),3))

  for y in range(len(a)):
    for z in range(3):
      x[y, z] = a[y, z]

  sorted = bubble_array(x)
  visited = list(())
  cost1 = 0

  for k in range(len(x)):
    if x[k, 0] in visited and x[k, 1] in visited:
        pass
    else: 
      cost1 = cost1 + x[k, 2]
      if x[k, 0] not in visited and x[k, 1] in visited:
        visited.append(x[k, 0])
      elif x[k, 0] in visited and x[k, 1] not in visited:
        visited.append(x[k, 1])
      else:
        visited.append(x[k, 0])
        visited.append(x[k, 1])
        
  return visited, cost1

a = np.array([[2, 4, 24], [4, 7, 13], [5, 6, 45], [1, 5, 17], [3, 5, 20], [1, 7, 12], [1, 4, 28], [3, 6, 37], [2, 5, 62], [1, 2, 67], [5, 7, 73]])

j,k = kruskal(a)
print(j,k)